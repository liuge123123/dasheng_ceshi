<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tcc.modules.cust.dao.CommissionDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.tcc.modules.cust.entity.CommissionEntity" id="commissionMap">
        <result property="id" column="id"/>
        <result property="custId" column="cust_id"/>
        <result property="backname" column="backname"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="account" column="account"/>
        <result property="iban" column="iban"/>
        <result property="chusheng" column="chusheng"/>
        <result property="money" column="money"/>
        <result property="status" column="status"/>
        <result property="cn" column="cn"/>
        <result property="remark" column="remark"/>
        <result property="dzMoney" column="dz_money"/>
        <result property="cut" column="cut"/>
        <result property="createTime" column="create_time"/>
        <result property="checkBy" column="check_by"/>
        <result property="checkTime" column="check_time"/>
        <result property="orgId" column="org_id"/>
        <result property="delFlag" column="del_flag"/>
    </resultMap>
    <!--获取提现申请列表-->
    <select id="getCommissionList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            com.id,
            c.cust_id as custId,
            c.cust_name as custName,
            com.name,com.account,
            com.money,com.iban,
            com.dz_money as dzMoney,
            com.order_id as orderId,
            com.`status`,com.remark,
            com.bankname,
            com.channel_name as channelName,
            com.code,
            com.create_time as createTime,
            com.check_time as checkTime,
            c.login_ip as loginIp,
            c.salesman_id as salesmanId
        from c_commission as com join c_cust as c on c.cust_id =com.cust_id
        <where>
             com.org_id =#{condition.orgId}
            <if test="condition.key != null and condition.key != ''">
                AND (c.cust_name like concat('%', #{condition.key}, '%') or c.cust_id like concat('%', #{condition.key}, '%')
                )
            </if>
            <if test="condition.userId != null and condition.userId != ''">
                and com.cust_id = #{condition.userId}
            </if>
            <if test="condition.bankName != null and condition.bankName != ''">
                and com.bankname = #{condition.bankName}
            </if>
            <if test="condition.mobile != null and condition.mobile != ''">
                and c.cust_name = #{condition.mobile}
            </if>
            <if test="condition.orderId != null and condition.orderId != ''">
                and com.order_id = #{condition.orderId}
            </if>
            <if test="condition.status != null and condition.status != ''">
                and com.status = #{condition.status}
            </if>
            <if test="condition.createTime != null and condition.createTime != ''">
                and FROM_UNIXTIME(com.create_time,'%Y-%m-%d') = #{condition.createTime}
            </if>
            <if test="condition.updateTime != null and condition.updateTime != ''">
                and FROM_UNIXTIME(com.check_time,'%Y-%m-%d') = #{condition.updateTime}
            </if>
            <if test="condition.team!=null">
                and c.salesman_id in
                <foreach item="item" collection="condition.team" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
           order  by com.create_time desc
        </where>
    </select>

    <select id="getSuccessCount" resultType="java.math.BigDecimal" parameterType="java.util.Map">
        SELECT
        IFNULL(sum(IFNULL(com.money, 0)), 0)
        from c_commission as com join c_cust as c on c.cust_id =com.cust_id
        <where>
            com.is_nb = 0
            and com.status = 1
            and com.org_id =#{condition.orgId}
            <if test="condition.key != null and condition.key != ''">
                AND (c.cust_name like concat('%', #{condition.key}, '%') or c.cust_id like concat('%', #{condition.key}, '%')
                )
            </if>
            <if test="condition.userId != null and condition.userId != ''">
                and com.cust_id = #{condition.userId}
            </if>
            <if test="condition.bankName != null and condition.bankName != ''">
                and com.bankname = #{condition.bankName}
            </if>
            <if test="condition.orderId != null and condition.orderId != ''">
                and com.order_id = #{condition.orderId}
            </if>
            <if test="condition.status != null and condition.status != ''">
                and com.status = #{condition.status}
            </if>
            <if test="condition.createTime != null and condition.createTime != ''">
                and FROM_UNIXTIME(com.create_time,'%Y-%m-%d') = #{condition.createTime}
            </if>
            <if test="condition.updateTime != null and condition.updateTime != ''">
                and FROM_UNIXTIME(com.check_time,'%Y-%m-%d') = #{condition.updateTime}
            </if>
            <if test="condition.team!=null">
                and c.salesman_id in
                <foreach item="item" collection="condition.team" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getAuditCount" resultType="java.math.BigDecimal" parameterType="java.util.Map">
        SELECT
        IFNULL(sum(IFNULL(com.money, 0)), 0)
        from c_commission as com join c_cust as c on c.cust_id =com.cust_id
        <where>
            com.is_nb = 0
            and com.status = 0
            and com.org_id =#{condition.orgId}
            <if test="condition.key != null and condition.key != ''">
                AND (c.cust_name like concat('%', #{condition.key}, '%') or c.cust_id like concat('%', #{condition.key}, '%')
                )
            </if>
            <if test="condition.userId != null and condition.userId != ''">
                and com.cust_id = #{condition.userId}
            </if>
            <if test="condition.bankName != null and condition.bankName != ''">
                and com.bankname = #{condition.bankName}
            </if>
            <if test="condition.orderId != null and condition.orderId != ''">
                and com.order_id = #{condition.orderId}
            </if>
            <if test="condition.status != null and condition.status != ''">
                and com.status = #{condition.status}
            </if>
            <if test="condition.createTime != null and condition.createTime != ''">
                and FROM_UNIXTIME(com.create_time,'%Y-%m-%d') = #{condition.createTime}
            </if>
            <if test="condition.updateTime != null and condition.updateTime != ''">
                and FROM_UNIXTIME(com.check_time,'%Y-%m-%d') = #{condition.updateTime}
            </if>
            <if test="condition.team!=null">
                and c.salesman_id in
                <foreach item="item" collection="condition.team" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>



    <select id="getCustListByAccount" parameterType="java.util.Map" resultType="java.util.Map">
        select
            DISTINCT
            b.cust_id as custId,
            b.cust_name as custName,
            b.mobile,
            b.parent_id as parentId,
            b.status,
            b.head_img as headImg,
            b.left_commission_money as leftCommissionMoney,
            b.salesman_id as salesmanId,
            b.level,
            b.level_up_time as levelUpTime,
            b.complete,
            b.login_time as loginTime,
            b.login_ip as loginIp,
            b.join_ip as joinIp,
            b.join_time as joinTime,
            b.last_level as lastLevel,
            b.is_nb as isNb,
            g.grade_name as gradeName,
            g.money
        from
            c_commission a
            left join c_cust b on a.cust_id = b.cust_id
            left join t_goods_grade as g on g.id=b.`level`
        where
            a.account = #{condition.account}
    </select>

    <select id="getSum" resultType="java.math.BigDecimal" parameterType="java.lang.Long">
        select
            sum(money) as money
        from
            c_commission
        where
            cust_id = #{custId}
            <![CDATA[ and status < 2 ]]>
    </select>

    <select id="getSumBySuccess" resultType="java.math.BigDecimal" parameterType="java.lang.Long">
        select
            sum(money) as money
        from
            c_commission
        where
            cust_id = #{custId}
            <![CDATA[ and status = 1 ]]>
    </select>


    <!--扣减佣金余额-->
    <update id="reduceLeftCommissionUpdateCust" parameterType="java.util.Map">
        update c_cust set left_commission_money =left_commission_money-#{condition.money}
        <where>
            cust_id = #{condition.custId}
        </where>
    </update>
    <!--退回到佣金余额-->
    <update id="backLeftCommissionUpdateCust" parameterType="java.util.Map">
        update c_cust set left_commission_money =left_commission_money+#{condition.money}
        <where>
            cust_id = #{condition.custId}
        </where>
    </update>
</mapper>